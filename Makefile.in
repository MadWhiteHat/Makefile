.ONESHELL:

CC=gcc
CC_FLAGS=-Wall -Wextra -Ofast

PROJECT_ROOT_DIR=${abspath ./}
STATIC=static
SHARED=dynamic
BLOB=blob
BUILD_DIR=${PROJECT_BUILD_DIR}/${BUILD_TYPE}

PROJECT_NAME=text2png
PROJECT_SOURCE_DIR=${PROJECT_ROOT_DIR}/src
PROJECT_OUT_DIR=${PROJECT_ROOT_DIR}/out
PROJECT_EXTERNAL_DIR=${PROJECT_ROOT_DIR}/external
PROJECT_HEADERS=${PROJECT_SOURCE_DIR}/utility.h
PROJECT_SOURCES=${PROJECT_SOURCE_DIR}/main.c ${PROJECT_SOURCE_DIR}/utility.c
PROJECT_BUILD_DIR=${PROJECT_OUT_DIR}/build
PROJECT_BINARY_DIR=${BUILD_DIR}/${PROJECT_NAME}
PROJECT_EXECUTABLE_NAME=${PROJECT_NAME}-${BUILD_TYPE}.out

ZLIB_DIR=zlib
ZLIB_SOURCE_DIR=${PROJECT_EXTERNAL_DIR}/${ZLIB_DIR}
ZLIB_BINARY_DIR=${BUILD_DIR}/${ZLIB_DIR}
ZLIB_STATIC_LIB_NAME=libz.a
ZLIB_STATIC_LIB=${ZLIB_BINARY_DIR}/${ZLIB_STATIC_LIB_NAME}
ZLIB_SHARED_LIB_NAME=libz.so
ZLIB_SHARED_LIB=${ZLIB_BINARY_DIR}/${ZLIB_SHARED_LIB_NAME}

LIBPNG_DIR=libpng
LIBPNG_SOURCE_DIR=${PROJECT_EXTERNAL_DIR}/${LIBPNG_DIR}
LIBPNG_BINARY_DIR=${BUILD_DIR}/${LIBPNG_DIR}
LIBPNG_HEADERS_DIR=${LIBPNG_SOURCE_DIR}
LIBPNG_STATIC_LIB_NAME=libpng.a
LIBPNG_STATIC_LIB=${LIBPNG_BINARY_DIR}/${LIBPNG_STATIC_LIB_NAME}
LIBPNG_SHARED_LIB_NAME=libpng.so
LIBPNG_SHARED_LIB=${LIBPNG_BINARY_DIR}/${LIBPNG_SHARED_LIB_NAME}

FREETYPE_DIR=freetype
FREETYPE_SOURCE_DIR=${PROJECT_EXTERNAL_DIR}/${FREETYPE_DIR}
FREETYPE_BINARY_DIR=${BUILD_DIR}/${FREETYPE_DIR}
FREETYPE_HEADERS_DIR=${FREETYPE_SOURCE_DIR}/include
FREETYPE_STATIC_LIB_NAME=libfreetype.a
FREETYPE_STATIC_LIB=${FREETYPE_BINARY_DIR}/${FREETYPE_STATIC_LIB_NAME}
FREETYPE_SHARED_LIB_NAME=libfreetype.so
FREETYPE_SHARED_LIB=${FREETYPE_BINARY_DIR}/${FREETYPE_SHARED_LIB_NAME}

ELFLOADER_NAME=elfloader
ELFLOADER_SOURCE_DIR=${PROJECT_EXTERNAL_DIR}/${ELFLOADER_NAME}
ELFLOADER_BINARY_DIR=${PROJECT_BUILD_DIR}/${ELFLOADER_NAME}
ELFLOADER_EXECUTABLE_NAME=${ELFLOADER_NAME}.out

CC_STATIC_FLAGS=-static -Werror
CC_DYNAMIC_FLAGS=-Werror -Wl,-rpath=${ZLIB_BINARY_DIR}
CC_BLOB_FLAGS=-fno-stack-protector -fno-exceptions -nostdlib -pie -fPIE -fPIC

--zlib: ${ZLIB_SOURCE_DIR}
	@echo "Building zlib..."
	@mkdir -p ${ZLIB_BINARY_DIR}
	@cd ${ZLIB_BINARY_DIR}
	cmake \
	-DZLIB_BUILD_EXAMPLES=OFF \
	-DCMAKE_C_FLAGS_INIT=${ZLIB_FLAGS} \
	-Wno-deprecated \
	${ZLIB_SOURCE_DIR}
	@cmake --build . --target ${ZLIB_TARGET}
	@cd ${PROJECT_ROOT_DIR}
	@echo "Done!"


--libpng: --zlib
--libpng: ${LIBPNG_SOURCE_DIR}
	@echo "Building libpng..."
	@mkdir -p ${LIBPNG_BINARY_DIR}
	@cd ${LIBPNG_BINARY_DIR}
	cmake \
	-DCMAKE_C_FLAGS_INIT=${LIBPNG_FLAGS} \
	-DPNG_SHARED=${LIBPNG_BUILD_SHARED} \
	-DPNG_STATIC=${LIBPNG_BUILD_STATIC} \
	-DPNG_TESTS=OFF \
	-DPNG_TOOLS=OFF \
	-DPNG_BUILD_ZLIB=ON \
	-DZLIB_INCLUDE_DIRS="${ZLIB_SOURCE_DIR};${ZLIB_BINARY_DIR}" \
	-DM_LIBRARY= \
	-Wno-deprecated \
	${LIBPNG_SOURCE_DIR}
	cmake --build . --target ${LIBPNG_TARGET}
	@cd ${PROJECT_ROOT_DIR}
	@echo "Done!"

--freetype: --zlib
--freetype: ${FREETYPE_SOURCE_DIR}
	@echo "Building freetype..."
	@mkdir -p ${FREETYPE_BINARY_DIR}
	@cd ${FREETYPE_BINARY_DIR}
	cmake \
	-DCMAKE_C_FLAGS_INIT=${FREETYPE_FLAGS} \
	-DBUILD_SHARED_LIBS=${FREETYPE_BUILD_SHARED_LIBS} \
	-DFT_DISABLE_ZLIB=ON \
	-DFT_DISABLE_PNG=ON \
	-DFT_DISABLE_HARFBUZZ=ON \
	-DFT_DISABLE_BROTLI=ON \
	-DFT_DISABLE_BZIP2=ON \
	${FREETYPE_SOURCE_DIR}
	cmake --build . --target ${FREETYPE_TARGET}
	@cd ${PROJECT_ROOT_DIR}
	@echo "Done!"

--elf_loader: ${ELFLOADER_SOURCE_DIR}/Makefile
	@echo "Building elf loader..."
	@${MAKE} -C ${ELFLOADER_SOURCE_DIR} all 1> /dev/null
	@mkdir -p ${ELFLOADER_BINARY_DIR} 1> /dev/null
	@mv ${ELFLOADER_SOURCE_DIR}/${ELFLOADER_EXECUTABLE_NAME} \
		${ELFLOADER_BINARY_DIR}/
	@ln -nsf ${ELFLOADER_BINARY_DIR}/${ELFLOADER_EXECUTABLE_NAME} \
		${ELFLOADER_EXECUTABLE_NAME}
	@echo "Done!"

--libs: --zlib --libpng --freetype

static: BUILD_TYPE=${STATIC}
static: ZLIB_TARGET=zlibstatic
static: ZLIB_FLAGS="${CC_FLAGS}"
static: LIBPNG_BUILD_STATIC=ON
static: LIBPNG_BUILD_SHARED=OFF
static: LIBPNG_TARGET=png_static
static: LIBPNG_FLAGS="${CC_FLAGS}"
static: FREETYPE_BUILD_SHARED_LIBS=OFF
static: FREETYPE_TARGET=freetype
static: FREETYPE_FLAGS="${CC_FLAGS}"
static: PROJECT_LINKAGE_TYPE=STATIC
static: --libs \
	${PROJECT_HEADERS} ${PROJECT_SOURCES}
	@echo "Building project with static linkage..."
	@mkdir -p ${PROJECT_BINARY_DIR}
	${CC} ${CC_FLAGS} ${CC_STATIC_FLAGS} -D${PROJECT_LINKAGE_TYPE} \
		${PROJECT_SOURCES} \
		-I${LIBPNG_HEADERS_DIR} -I${FREETYPE_HEADERS_DIR} \
		${FREETYPE_STATIC_LIB} ${LIBPNG_STATIC_LIB} ${ZLIB_STATIC_LIB} -lm \
		-o ${PROJECT_BINARY_DIR}/${PROJECT_EXECUTABLE_NAME}
	@ln -nsf ${PROJECT_BINARY_DIR}/${PROJECT_EXECUTABLE_NAME} \
		${PROJECT_EXECUTABLE_NAME}
	@echo "Done!"

dynamic: BUILD_TYPE=${SHARED}
dynamic: ZLIB_TARGET=zlib
dynamic: ZLIB_FLAGS="${CC_FLAGS}"
dynamic: LIBPNG_BUILD_STATIC=OFF
dynamic: LIBPNG_BUILD_SHARED=ON
dynamic: LIBPNG_TARGET=png_shared
dynamic: LIBPNG_FLAGS="${CC_FLAGS}"
dynamic: FREETYPE_BUILD_SHARED_LIBS=ON
dynamic: FREETYPE_TARGET=freetype
dynamic: FREETYPE_FLAGS="${CC_FLAGS}"
dynamic: PROJECT_LINKAGE_TYPE=DYNAMIC
dynamic: --libs \
	${PROJECT_HEADERS} ${PROJECT_SOURCES}
	@echo "Building project with dynamic linkage..."
	@mkdir -p ${PROJECT_BINARY_DIR}
	${CC} ${CC_FLAGS} ${CC_DYNAMIC_FLAGS} -D${PROJECT_LINKAGE_TYPE} \
		-DLIBPNG_PATH='"${LIBPNG_SHARED_LIB}"' \
		-DLIBFREETYPE_PATH='"${FREETYPE_SHARED_LIB}"' \
		${PROJECT_SOURCES} \
		-I${LIBPNG_HEADERS_DIR} -I${FREETYPE_HEADERS_DIR} \
		-lz -lm -ldl \
		-o ${PROJECT_BINARY_DIR}/${PROJECT_EXECUTABLE_NAME}
	@ln -nsf ${PROJECT_BINARY_DIR}/${PROJECT_EXECUTABLE_NAME} \
		${PROJECT_EXECUTABLE_NAME}
	@echo "Done!"

blob: BUILD_TYPE=${BLOB}
blob: ZLIB_TARGET=zlibstatic
blob: ZLIB_FLAGS="${CC_FLAGS} ${CC_BLOB_FLAGS}"
blob: LIBPNG_BUILD_STATIC=ON
blob: LIBPNG_BUILD_SHARED=OFF
blob: LIBPNG_TARGET=png_static
blob: LIBPNG_FLAGS="${CC_FLAGS} ${CC_BLOB_FLAGS}"
blob: FREETYPE_BUILD_SHARED_LIBS=OFF
blob: FREETYPE_TARGET=freetype
blob: FREETYPE_FLAGS="${CC_FLAGS} ${CC_BLOB_FLAGS}"
blob: PROJECT_LINKAGE_TYPE=BLOB
blob: --libs --elf_loader
	@echo "Building project with elfloader..."
	@mkdir -p ${PROJECT_BINARY_DIR}
	${CC} \
		${PROJECT_SOURCES} \
		-I${ELFLOADER_SOURCE_DIR} -I${LIBPNG_HEADERS_DIR} -I${FREETYPE_HEADERS_DIR} \
		${FREETYPE_STATIC_LIB} ${LIBPNG_STATIC_LIB}	${ZLIB_STATIC_LIB} \
		${CC_FLAGS} ${CC_BLOB_FLAGS} -e blob_entry -D${PROJECT_LINKAGE_TYPE} \
		-o ${PROJECT_BINARY_DIR}/${PROJECT_EXECUTABLE_NAME}
	@ln -nsf ${PROJECT_BINARY_DIR}/${PROJECT_EXECUTABLE_NAME} \
		${PROJECT_EXECUTABLE_NAME}
	@echo "Done!"

clean:
	@echo "Cleaning up..."
	@rm -f ${PROJECT_NAME}*
	@rm -f ${ELFLOADER_EXECUTABLE_NAME}
	@rm -rf ${PROJECT_OUT_DIR}
	@rm -f *.png
	@echo "Done!"
